企业级的分布式开源监控方案
Zabbix是免费的, Zabbix是根据GPL通用公共许可证第2版编写和发行的
Zabbix可以模拟鼠标在Web网站上的操作来检查Web的功能和响应时间
自动发现网络设备(https://www.zabbix.com/documentation/3.4/zh/manual/discovery/network_discovery)
自动监控新的节点:活动的Zabbix agent可以自动注册到服务器进行监控,无需在服务器上手动配置

轻量目录访问协议
LDAP, Lightweight Directory Access Protocol

安全传输层协议v1.2
TLS, Transport Layer Security

应用场景介绍
https://www.zabbix.com/solutions
https://www.zabbix.com/it_and_telecommunications


zabbix_server:服务程序，zabbix_agentd、zabbix_get、zabbix_sender、zabbix_proxy、zabbix_java_gateway的数据都提交到zabbix_server
zabbix_proxy:代理守护进程，功能类似server，只是转发收集到的数据提交到server
zabbix_agentd:客户端守护进程，此进程收集客户端数据，例如cpu负载、内存、硬盘使用情况等
zabbix_get:通常在server或者proxy侧单独执行，获取远程客户端信息。例如：server获取不到客户端的内存数据，可使用zabbix_get来做故障排查
zabbix_sender:发送数据给server或者proxy，用于耗时比较长的检查。很多检查非常耗时间，导致zabbix超时，可使用sender主动提交数据
abbix_java_gateway:zabbix2.0后引入，只用于Java, 类似agentd。只能主动获取数据。数据最终会提交到server或者proxy

zabbix_server对服务器的硬件配置要求非常低
4核16G可监控1W+主机(https://www.zabbix.com/documentation/3.4/manual/installation/requirements)


LNMP环境配置
Linux安装：http://www.osyunwei.com/archives/1024.html
NGINX安装：http://www.ttlsa.com/nginx/nginx-install-on-linux/
PHP安装+NGINX配置：http://www.ttlsa.com/nginx/nginx-php-5_5/ （安装前一定要看1.1 PHP安装参数）
MYSQL安装：http://www.ttlsa.com/mysql/install-mysql5_6/




agent主动(active)
	agent主动检测
	server/proxy捕获检测结果
	agent主动向server/proxy请求检测列表
	agent定期向server/proxy发送检测结果
	数据由agent主动提交至server/proxy
	agent不监听本地端口、不执行远程命令
	此模式的agent可自动注册，不需在server/proxy配置

agent被动(passive)
server/proxy轮询(polling)
	server/proxy主动向agent收集监控数据
	agent需监听本地端口
	agent提供丰富的key，包括不限于cpu、内存、网络、磁盘、web等
	server/proxy检测数据有超时限制，最大超时时间30秒
	如果检测数据经常超过30秒，不建议使用此模式

server/proxy捕获(trapping)
	可以不使用ZabbixAgent
	ZabbixSender/ZabbixAgent主动向server/proxy发送数据
	HostName需要唯一
	Type of information必须使用"text"



集成第三方配置管理
Puppet, cfengine, Chef, bcfg2, Salt

IT基础设施/服务/应用/云资源监控的解决方案

Discovery of Windows services(https://www.zabbix.com/documentation/3.4/manual/discovery/low_level_discovery/windows_services)

官方监控模板
https://www.zabbix.org/wiki/Zabbix_Templates/Official_Templates
社区监控模板
https://share.zabbix.com/cat-app


----打印所有监控项
zabbix_agentd.exe -p
zabbix_get -s agent主机IP -p 10050 -k "监控项的KEY"
例如: zabbix_get -s 192.168.122.136 -p 10050 -k "system.localtime[utc]"


----zabbix_agentd(Windows启动参数)
-i --install          安装为服务
-d --uninstall        移除服务
-s --start            启动服务zabbix_agentd
-x --stop             关闭zabbix_agentd


----zabbix_sender(启动参数)
-c --config <file>                   配置文件绝对路径
-z --zabbix-server <server>          zabbix server的IP地址
-p --port <server port>              zabbix server端口.默认10051
-s --host <hostname>                 主机名，zabbix里面配置的主机名（不是服务器的hostname），不能使用ip地址
-I --source-address <IP address>     源IP
-k --key <key>                       监控项的key
-o --value <key value>               key值
-i --input-file <input file>         从文件里面读取hostname、key、value 一行为一条数据，使用空格作为分隔符，如果主机名带空格，那么请使用双引号包起来
-T --with-timestamps                 一行一条数据，空格作为分隔符: <hostname> <key> <timestamp> <value>，配合 --input-file option，timestamp为unix时间戳
-r --real-time                       将数据实时提交给服务器
-v --verbose                         详细模式, -vv 更详细

----VMware Login
appliance/zabbix
root/zabbix

netstat -atunpl
all
tcp
udp
numeric
pid/program
listening

设置agent服务器:修改配置文件 Zabbix server - zabbix_agentd.conf    ServerActive=10.0.0.1

ServerActive:指定ZabbixAgent采集数据的发送方
Hostname:必须和ZabbixServer添加主机时的主机名一致

appliance切换root:#sudo su
guest切换appliance:su appliance

----tcpdump
/usr/local/lib/libpcap.so.1.8.1
/usr/local/sbin/tcpdump
tcpdump --help
tcpdump -D		/*列出可用于抓包的接口。将会列出接口的数值编号和接口名，可用于"-i"*/
tcpdump -i XXX(指定tcpdump需要监听的接口)
tcpdump -nn		/*除了-n的作用外，还把端口显示为数值，否则显示端口服务名*/
tcpdump -XX		/*输出包的头部数据，会以16进制和ASCII两种方式同时输出，更详细*/
tcpdump -vvv	/*产生比-vv更详细的输出*/
tcpdump -c XXX(指定抓包数量，注意是最终获取的包。例如，指定"-c 10"将获取10个包，但可能已处理了100个包，只有10个包是满足条件的)


----查看LINUX版本信息
cat /proc/version
uname -a
lsb_release -a
cat /etc/issue



----配置文件路径
/etc/zabbix
----程序路径
/usr/sbin(zabbix_server zabbix_agentd zabbix_java zabbix_java_gateway)
/usr/bin(zabbix_get zabbix_sender)
----PHP路径
/usr/share/zabbix
----jar
/usr/share/zabbix-java-gateway


在zabbix_server.conf中编辑数据库配置
# vi /etc/zabbix/zabbix_server.conf
DBHost=localhost
DBName=zabbix
DBUser=zabbix
DBPassword=z1Z60Z6goz



change the database user password it has to be changed in the following locations:
MySQL;
/etc/zabbix/zabbix_server.conf
/etc/zabbix/web/zabbix.conf.php

Configuration files: /etc/zabbix
Zabbix server, proxy and agent logfiles: /var/log/zabbix
Zabbix frontend: /usr/share/zabbix
Home directory for user zabbix: /var/lib/zabbix


启动Zabbix Server进程
CentOS:# systemctl start zabbix-server
Debian/Ubuntu:# service zabbix-server start
service zabbix-server start
/etc/init.d/zabbix-server start

service zabbix-server start
service zabbix-server stop
service zabbix-server restart
service zabbix-server status


sudo killall vsftpd
sudo service vsftpd start


安装Apache
sudo yum -y install httpd
systemctl start httpd.service #启动
systemctl stop httpd.service #停止
systemctl restart httpd.service #重启
systemctl enable httpd.service #开机启动
systemctl disable httpd.service #开机不启动

安装PHP
sudo yum install php-mysqlnd php-gd libjpeg* php-snmp 
php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring 
php-bcmatch php-common php-ctype php-xmlreader php-xmlwriter 
php-session php-gettext php-mysqli --skip-broken

sudo yum install wget telnet net-tools python-paramiko 
gcc gcc-c++ dejavu-sans-fonts python-setuptools python-devel 
sendmail mailx net-snmp net-snmp-devel net-snmp-utils 
freetype-devel libpng-devel perl unbound libtasn1-devel p11-kit-devel OpenIPMI unixODBC


Zabbix前端的Apache配置文件位于 /etc/httpd/conf.d/zabbix.conf 
一些PHP设置已经完成了配置
php_value max_execution_time 300
php_value memory_limit 128M
php_value post_max_size 16M
php_value upload_max_filesize 2M
php_value max_input_time 300
php_value always_populate_raw_post_data -1
# php_value date.timezone Europe/Riga

依据所在时区，可以取消 “date.timezone” 设置的注释，并正确配置，在配置文件更改后，需要重启Apache Web服务器
# service apache2 restart

----前端配置
http://192.168.122.146/zabbix/setup.php

192.168.122.146
Zabbix前端可以在浏览器中通过 http://zabbix-frontend-hostname/zabbix 进行访问
http://192.168.122.146/zabbix
默认的用户名/密码: Admin/zabbix

Configuration--Templates--items:监控项

----时间配置
* s - 秒(一般来说来说不写s，就表示s)
* m - 分
* h - 小时
* d - 天
* w - 周

----单位符号
K - kilo
M - mega
G - giga
T - tera

优先级	操作	定义
1		/		除
2		*		乘
3		-		减
4		+		加
5		<		小于	用法:A<B ⇔ (A<=B-0.000001)
6		>		大于	用法:A>B ⇔ (A>=B+0.000001)
7		#		不等于	用法:A#B ⇔ (A<=B-0.000001) | (A>=B+0.000001)
8		=		等于	用法:A=B ⇔ (A>B-0.000001) & (A<B+0.000001)
9		&		逻辑与
10		|		逻辑或


	监控功能						proxy支持(yes/no)
Zabbix agent checks					Yes
Zabbix agent checks (active)		Yes
Simple checks						Yes
Trapper items						Yes
SNMP checks							Yes
SNMP traps							Yes
IPMI checks							Yes
JMX checks							Yes
日志文件监控（Log file monitoring）	Yes
内部检查（Internal checks）			Yes
SSH checks							Yes
Telnet checks						Yes
外部检查（External checks）			Yes
Built-in web monitoring				Yes
网络发现(Network discovery)			Yes
自动发现（Low-level discovery）		Yes
触发器计算（Calculating triggers）	No
处理事件（Processing events）		No
发送报警（Sending alerts）			No
远程命令（Remote commands）			No



----通过共享目录实现Windows和Linux的互相访问
1、共享WindowsE盘ShareToLinux文件夹
2、在ubuntu系统下安装samba-client (sudo apt-get install smbclient)
3、在ubuntu系统下安装cifs-utils (sudo apt-get install cifs-utils)
4、在ubuntu系统下创建目录hupf (mkdir /home/hupf)
5、挂载Windows上的ShareToLinux到ubuntu上的/home/hupf
   sudo mount -t cifs -o username=Administrator //172.22.100.18/ShareToLinux /home/hupf
   sudo mount -t cifs -o username=hupf //172.22.100.18/ShareToCentOs7 /home/hupf/CentOs7ShareFiles
   其中Administrator是Windows的用户名, 172.22.100.18是Windows主机的ip地址
   运行命令出现以下提示，Password for Administrator@172.22.100.18/ShareToLinux: 输入Windows主机的Administrator用户的密码
6、通过 /home/hupf 和 ShareToLinux 在Windows和Linux之间交换数据

----端口定义
/etc/services


----ZABBIX API
http://zabbix.org/wiki/Docs/api/libraries




----conf---
AlertScriptsPath
默认值：/usr/local/share/zabbix/alertscripts
说明：报警脚本目录

------------------------
AllowRoot
默认值：0
说明：是否允许使用root启动
0:不允许，1:允许，
默认情况下会使用zabbix用户来启动zabbix进程，不推荐使用root

------------------------
CacheSize
取值范围： 128K-8G
默认值：8M
说明：配置缓存，用于存储host，item，trigger数据，2.2.3版本之前最大支持2G，目前最大支持8G，一般用不了多少的

------------------------
CacheUpdateFrequency
取值范围：1-3600
默认值：60
说明：多少秒更新一次配置缓存

------------------------
DBHost
默认值：localhost
说明：数据库主机地址

------------------------
DBName
默认值：无
必填：是

------------------------
DBPassword：
默认值：空
说明：数据库密码

------------------------
DBPort
取值范围：1024-65535
默认值:3306
说明：SQLite作为DB，这个选项请忽略，如果使用socket链接，也请忽略

------------------------
DBSchema
说明：Schema名称
用于 IBM DB2、 PostgreSQL

------------------------
DBSocket
默认值：/tmp/mysql.sock
说明：mysql sock文件路径

------------------------
DebugLevel
取值范围：0-5
默认值：3
说明: 指定debug级别
0 - 基本信息
1 - critical信息
2 - error信息
3 - warnings信息
4 - 调试日志，日志内容很多，慎重使用
5 - 用于调试web和vmware监控

------------------------
ExternalScripts
默认值：/usr/local/share/zabbix/externalscripts
说明： 外部脚本目录

------------------------
Fping6Location
默认值：/usr/sbin/fping6
说明：fping6路径，不懂fping的人可以百度一下，如果zabbix非root启动，请给fping6 SUID

------------------------
FpingLocation
默认值：/usr/sbin/fping
说明:和上面的一样

------------------------
HistoryCacheSize
取值范围：128K-2G
默认值：8M
说明：历史记录缓存大小，用于存储历史记录

------------------------
HistoryTextCacheSize
取值范围：128K-2G
默认值：16M
说明：文本类型历史记录的缓存大小，存储character, text、log历史记录

------------------------
HousekeepingFrequency
取值范围：0-24
默认值：1
说明：housekeep执行频率，默认每小时回去删除一些过期数据。如果server重启，那么30分钟之后执行一次，接下来，每隔一小时再执行一次

------------------------
Include
说明：include配置文件，可以使用正则表达式，例如：/usr/local/zabbix-2.4.4/conf/ttlsa.com/*.conf

------------------------
JavaGateway
说明：Zabbix Java gateway的主机名，需要启动Java pollers

------------------------
JavaGatewayPort
取值范围：1024-32767
默认值：10052
Zabbix Java gateway监听端口

------------------------
ListenIP
默认值：0.0.0.0
说明：监听地址，留空则会在所有的地址上监听，可以监听多个IP地址，ip之间使用逗号分隔，例如：127.0.0.1,10.10.0.2

------------------------
ListenPort
取值范围：1024-32767
默认值：10051
说明：监听端口

------------------------
LoadModule
说明：加载模块，格式: LoadModule=，文件必须在指定的LoadModulePath目录下，如果需要加载多个模块，写多个

------------------------
LoadModulePath
模块目录，参考上面

------------------------
LogFile
日志文件，例如：/data/logs/zabbix/zabbix-server.log

------------------------
LogFileSize
取值范围：0-1024
默认值：1
0表示禁用日志自动rotation，如果日志达到了限制，并且rotation失败，老日志文件将会被清空掉，重新生成一个新日志

------------------------
LogSlowQueries
取值范围：0-3600000
默认值：0
多慢的数据库查询将会被记录，单位：毫秒，0表示不记录慢查询。只有在DebugLevel=3时，这个配置才有效

------------------------
MaxHousekeeperDelete
取值范围： 0-1000000
默认值：5000
housekeeping一次删除的数据不能大于MaxHousekeeperDelete

------------------------
PidFile
默认值：/tmp/zabbix_server.pid
PID文件

------------------------
ProxyConfigFrequency
取值范围：1-604800
默认值：3600
proxy被动模式下，server多少秒同步配置文件至proxy。

------------------------
ProxyDataFrequency
取值范围：1-3600
默认值:1
被动模式下，zabbix server间隔多少秒向proxy请求历史数据

------------------------
SenderFrequency
取值范围：5-3600
默认值：30
间隔多少秒，再尝试发送报警

------------------------
SNMPTrapperFile
默认值：/tmp/zabbix_traps.tmp
SNMP trap发送到server的数据临时存放文件

------------------------
SourceIP
出口IP地址

------------------------
SSHKeyLocation
SSH公钥私钥路径

------------------------
SSLCertLocation
SSL证书目录，用于web监控

------------------------
SSLKeyLocation
SSL认证私钥路径、用于web监控

------------------------
SSLCALocation
SSL认证,CA路径，如果为空，将会使用系统默认的CA

------------------------
StartDBSyncers
取值范围：1-100
默认值：4
预先foke DB Syncers的数量，1.8.5以前最大值为64

------------------------
StartDiscoverers
取值范围：0-250
默认值：1
pre-forked discoverers的数量，1.8.5版本以前最大可为255

------------------------
StartHTTPPollers
取值范围：0-1000
默认值：1
pre-forked HTTP pollers的数量，1.8.5以前最大255

------------------------
StartIPMIPollers
取值范围：0-1000
默认值：0
pre-forked IPMI pollers的数量，1.8.5之前，最大为255

------------------------
Timeout
取值范围：1-30
默认值：3
agent，snmp，external check的超时时间，单位为秒

------------------------
TmpDir
默认值：/tmp

------------------------
TrapperTimeout
取值范围：1-300
默认值：300
处理trapper数据的超时时间

------------------------
TrendCacheSize
取值范围：128K-2G
默认值：4M
历史数据缓存大小

------------------------
UnavailableDelay
取值范围：1-3600
默认值：60
间隔多少秒再次检测主机是否可用

------------------------
UnreachableDelay
取值范围：1-3600
默认值：15
间隔多少秒再次检测主机是否可达

------------------------
UnreachablePeriod
取值范围：1-3600
默认值：45
检测到主机不可用，多久将它置为不可达

------------------------
User
默认值：zabbix
启动zabbix server的用户，在配置禁止root启动，并且当前shell用户是root得情况下有效。如果当前用户是hupf，那么zabbix server的运行用户是hupf

------------------------
ValueCacheSize
取值范围：0,128K-64G
默认值：8M
0表示禁用，history value缓存大小，当缓存超标了，将会每隔5分钟往server日志里面记录。养成看日志的好习惯

------------------------
Alias
key的别名，例如:
Alias=hupf.userid:vfs.file.regexp[/etc/passwd,^hupf:.:([0-9]+),,,,\1]，或者hupf的用户ID
可使用key：vfs.file.regexp[/etc/passwd,^hupf:.: ([0-9]+),,,,\1]，也可使用hupf.userid
备注: 别名不能重复，但是可以有多个alias对应同一个key

------------------------
AllowRoot
默认值：0
是否允许使用root身份运行zabbix，如果值为0，并且是在root环境下，zabbix会尝试使用zabbix用户运行，如果不存在会告知zabbix用户不存在。
0 - 不允许
1 - 允许

------------------------
BufferSend
取值范围：1-3600
默认值：5
数据存储在buffer中最长多少秒

------------------------
BufferSize
取值范围：2-65535
默认值：100
buffer最大值，如果buffer满了，zabbix将会将检索到的数据发送给zabbix server或者proxy

------------------------
DebugLevel
取值范围：0-5
默认值：3
指定日志级别
0 - basic information about starting and stopping of Zabbix processes
1 - critical级别
2 - error级别
3 - warnings级别
4 - debug级别
5 - extended debugging (与级别4一样. 只能使用runtime control 来设置.)

------------------------
EnableRemoteCommands
默认值：0
是否运行zabbix server在此服务器上执行远程命令
0 - 禁止
1 - 允许

------------------------
HostMetadata
取值范围：0-255 字符
仅用于主机自动注册功能，如果当前值为定义，那么它的值默认为HostMetadataItem的值
这个选项在2.2.0之后加入，并且确保支付不能超过限制，以及字符串必须是UTF8，否则服务器无法启动

------------------------
HostMetadataItem
功能同上，如果HostMetadata值未设置，这个配置才有效。支持使用UserParameters、alias、system.run[]

------------------------
Hostname
默认值：HostnameItem配置的值
主机名，必须唯一，区分大小写。
Hostname必须和zabbix web上配置的一直，否则zabbix主动监控无法正常工作。
agent使用这个主机名去问server，有配置主动监控项吗？server使用这个主机名去配置里面查询，然后返回
支持字符：数字字母、'.'、' '、 '_'、 '-'，不超过64个字符

------------------------
HostnameItem
默认值:system.hostname
设置主机名，只有当HostMetadata没设置，才生效。不支持UserParameters 、aliases，支持system.run[]

------------------------
Include
包含自配置文件，不同的配置写到不同的文件中，然后include，配置文件会显得规范。例如: /absolute/path/to/config/files/*.conf. Zabbix 2.4.0开始支持正则表达式

------------------------
ListenIP
默认值：0.0.0.0
监听IP地址，默认为所有接口，多个ip之间使用逗号分隔

------------------------
ListenPort
取值范围：1024-32767
默认值: 10050
监听端口

------------------------
LoadModule
加载模块文件，可以写多个
格式: LoadModule=
必须配置LoadModulePath，指定模块目录

------------------------
LoadModulePath
模块路径，绝对路径，如上

------------------------
LogFile
日志文件路径
如果未配置，日志会记录到syslog中

------------------------
LogFileSize
取值范围:0-1024
默认值：1
日志文件大小，单位为MB
0 - 关闭自动轮滚
备注：如果日志文件到达了最大值并且文件轮滚失败，那么老日志文件会被清空掉

------------------------
LogRemoteCommands
默认值：0
记录原型执行的shell命令日志，级别为warrning
0 - disabled
1 - enabled

------------------------
MaxLinesPerSecond
取值范围：1-1000
默认值：100
处理监控类型为log何eventlog日志时，agent每秒最大发送的行数。默认为100行


------------------------
PidFile
默认值:/tmp/zabbix_agentd.pid
PID文件名

------------------------
RefreshActiveChecks
取值范围：60-3600
默认值：120
多久时间（秒）刷新一次主动监控配置信息，如果刷新失败，那么60秒之后会重试一次

------------------------
Server
zabbix server的ip地址，多个ip使用逗号分隔

------------------------
ServerActive
zabbix 主动监控server的ip地址，使用逗号分隔多IP，如果注释这个选项，那么当前服务器的主动监控就被禁用了

------------------------
SourceIP
zabbix对外连接的出口IP地址

------------------------
StartAgents
取值范围：0-100
默认值：3
zabbix启动之后开启被动监控的进程数量，如果设置为0，那么zabbix被动监控被禁用，并且不会监听相应端口，也就是说10050端口不会开启

------------------------
Timeout
默认值：1-30
默认值：3
超时时间

------------------------
UnsafeUserParameters
取值范围：0,1
默认值： 0
允许所有字符的参数传递给用户定义的参数

------------------------
User
默认值：zabbix
运行zabbix程序的用户，AllowRoot被禁用后生效

------------------------
UserParameter
用户自定义key，格式: UserParameter=,
例如：serParameter=system.test,who|wc -l

----conf---


------------------------
(passive)(polling)
agent被动检测
server/proxy主动轮询
server/proxy主动向agent收集监控数据，agent提供丰富的key，包括不限于cpu、内存、网络、磁盘、web等
server/proxy检测数据有超时限制，最大超时时间30秒
如果检测数据经常超过30秒，不建议使用此模式

------------------------
(active)(trapping)
agent主动检测
server/proxy捕获检测结果
agent向server/proxy请求主动检测列表
agent向server/proxy定期发送检测结果
数据由agent主动提交至server/proxy

------------------------
simple check
基本的检测，可以检测网络、端口、fping这些，功能很少并且无需安装客户端

------------------------
snmp check
snmp v1 check、snmp v2 check、snmp v3 check的功能都是一样的
推荐如下场景：
○ 客户基于安全考虑，不同意安装agent
○ 路由器、打印机等等设备无法安装，但是支持snmp协议
○ 不喜欢频繁对agent升级

------------------------
zabbix internal
○ zabbix系统内部用，比如趋势数据记录数了、历史记录数量等等，日常业务监控用不上他

------------------------
zabbix trapper
需要安装agent（主动模式），需要借助bin/zabbix_sender将数据提交至zabbix server
如下情况适合使用：
○ 检索数据时间较长
○ 同一时间有大量的数据要提交，例如redis info信息，里面包含五六十项数据，通过zabbix_sender来一次性提交，显然比agent来取几十次要方便

------------------------
zabbix aggretage
aggregate checks是一个聚合的检测
例如:想知道某个组的host负载平均值，硬盘剩余总量，或者某几台机器的这些数据
简单的说，就是用来了解整体水平，而不需要精确到具体目标
数据全部来之数据库，不依赖agent

------------------------
external check
zabbix server运行脚本或者二进制文件来执行外部检测，外部检测不需要在被监控端运行任何agentd
备注：请不要过度使用外部检测，这会严重降低zabbix系统性能

------------------------
database monitor
zabbix通过调用ODBC来获取数据库的数据以及数据库状态等等信息

------------------------
IPMI agent
用于监控硬件设备，例如Dell或者hp服务器的主板温度、cpu电压、盖子是不是被打开等等

------------------------
SSH agent
zabbix使用提供的ssh信息（服务器用户密码或者证书）登录服务器，执行指定的脚本来检索数据
适合如下：
○ 不会安装agent、不想相撞agent
○ 不担心账号密码/证书放在zabbix里

------------------------
Telnet agent
同上，Windows不支持ssh，可以使用Telnet agent

------------------------
jmx agent
通过jmx监控java jvm，例如：tomcat
如果tomcat多实例，jmx agent只能监控一个
如果是多实例，建议使用agent + cmdline-jmxclient-0.10.3.jar

------------------------
zabbix Calculated
计算类型，在几个key值之间做计算，
例如redis自带的info命令可以监控keyspace_hits和keyspace_misses这两个值，但是redis的命中率不能直接获取，可以通过zabbix的calculated实现监控redis的命中率









